name: Publish

#concurrency:
#  group: publish

on:
  workflow_dispatch:
  schedule:
  - cron: '0 1 * * *'

jobs:
  build:
    runs-on: [self-hosted, linux]

    steps:
#    - name: Install dependencies
#      run: sudo apt-get install -y python3-paramiko python3-lxml

    - uses: actions/checkout@v3.6.0
      with:
        submodules: 'recursive'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 8.0.x

    - name: Get Engine Tag
      run: |
        cd RobustToolbox
        git fetch --depth=1

    - name: Install dependencies
      run: dotnet restore

    - name: Build Packaging
      run: dotnet build Content.Packaging --configuration Release --no-restore /m

    - name: Package server
      run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

    - name: Package client
      run: dotnet run --project Content.Packaging client --no-wipe-release

    - name: Upload build artifact
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: release/*.zip
        compression-level: 0
        retention-days: 0

    - name: Publish version
      run: Tools/publish_github_artifact.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        ARTIFACT_ID: ${{ steps.artifact-upload-step.outputs.artifact-id }}
        GITHUB_REPOSITORY: ${{ vars.GITHUB_REPOSITORY }}

    #    - name: Publish changelog (Discord)
    #      run: Tools/actions_changelogs_since_last_run.py
    #      env:
    #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #        DISCORD_WEBHOOK_URL: ${{ secrets.CHANGELOG_DISCORD_WEBHOOK }}

<<<<<<< HEAD
    - name: Upload files to mothership
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.BUILDS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "HOST *" > ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        rsync -avzr --ignore-existing -e ssh release/${{ github.sha }} ${{ secrets.BUILDS_USERNAME }}@${{ secrets.BUILDS_HOST }}:${{ secrets.BUILDS_PATH }}

    - name: Update manifest JSON
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BUILDS_HOST }}
        username: ${{ secrets.BUILDS_USERNAME }}
        key: ${{ secrets.BUILDS_SSH_KEY }}
        script: node ~/scripts/push_to_manifest.js -fork ${{ vars.FORK_ID }} -id ${{ github.sha }}

#    - name: Publish changelog (Discord)
#      run: Tools/actions_changelogs_since_last_run.py
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DISCORD_WEBHOOK_URL: ${{ secrets.CHANGELOG_DISCORD_WEBHOOK }}
#        TRANSLATION_API_URL: ${{ secrets.CHANGELOG_TRANSLATION_API_URL }}

#    - name: Publish changelog (RSS)
#      run: Tools/actions_changelog_rss.py
#      env:
#        CHANGELOG_RSS_KEY: ${{ secrets.CHANGELOG_RSS_KEY }}
=======
    #    - name: Publish changelog (RSS)
    #      run: Tools/actions_changelog_rss.py
    #      env:
    #        CHANGELOG_RSS_KEY: ${{ secrets.CHANGELOG_RSS_KEY }}

    - uses: geekyeggo/delete-artifact@v5
      if: always()
      with:
        name: build
>>>>>>> ups/master
