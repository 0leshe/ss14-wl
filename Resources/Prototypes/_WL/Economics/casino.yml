- type: entity
  id: BasePlayableCardBox
  parent: BaseStorageItem
  name: card bin
  description: What secrets lie at the bottom of its endless stack?
  abstract: true
  components:
  - type: PokerCardContainer
  - type: Storage
    grid:
    - 0,0,19,9
    maxItemSize: Huge
    whitelist:
      tags:
        - PlayableCard
        - TarotCard
  - type: UserInterface
    interfaces:
      enum.StorageUiKey.Key:
        type: StorageBoundUserInterface
  - type: ContainerContainer
    containers:
      storagebase: !type:Container
        ents: []
  - type: Appearance

- type: entity
  name: playable card
  parent: BaseItem
  abstract: true
  id: BasePlayableCard
  description: Пластиковая игральная карта, острая на краях
  components:
  - type: PokerCard
  - type: GenericVisualizer
    visuals:
      enum.PokerCardState.IsFlipped:
        enum.PokerCardLayers.Flipped:
         True: { visible: true }
         False: { visible: false }
        enum.PokerCardLayers.NonFlipped:
         True: { visible: false }
         False: { visible: true }
  - type: Sprite
    sprite: _WL/Entities/Objects/Economics/cards.rsi
    scale: 0.5,0.5
    drawdepth: Mobs
  - type: Item
    size: Tiny
  - type: Tag
    tags:
    - PlayableCard
  - type: Appearance
  - type: EmitSoundOnUse
    sound:
      path: /Audio/_WL/Economics/flip.ogg
      params:
        variation: 0.125
        volume: 20
  - type: EmbeddableProjectile
    minimumSpeed: 3
    removalTime: 0.5
    offset: 0.0,0.0
  - type: ThrowingAngle
    angle: 315
  - type: MeleeWeapon
    wideAnimationRotation: -45
    damage:
      types:
        Piercing: 1
    angle: 0
    animation: WeaponArcThrust
    soundHit:
      path: /Audio/Weapons/pierce.ogg
  - type: DamageOtherOnHit
    damage:
      types:
        Piercing: 2

- type: entity
  id: PokerCardBox
  parent: BasePlayableCardBox
  name: Колода карт
  description: Картонная коробка для хранения карт
  components:
  - type: Sprite
    sprite: _WL/Entities/Objects/Economics/cards.rsi
    scale: 0.6,0.6
    layers:
    - state: package
  - type: Storage
    grid:
    - 0,0,7,6
    maxItemSize: Small
    quickInsert: true
    areaInsert: true
    whitelist:
      tags:
        - PlayableCard
  - type: UserInterface
    interfaces:
      enum.StorageUiKey.Key:
        type: StorageBoundUserInterface
  - type: ContainerContainer
    containers:
      storagebase: !type:Container
        ents: []
  - type: Item
    size: Small
  - type: Appearance

- type: entity
  id: PokerCardBoxFilled
  parent: PokerCardBox
  suffix: Полная
  components:
  - type: StorageFill
    contents:
    - id: PokerCardTwoClub
    - id: PokerCardTwoSpade
    - id: PokerCardTwoHeart
    - id: PokerCardTwoDiamond
    - id: PokerCardThreeClub
    - id: PokerCardThreeSpade
    - id: PokerCardThreeHeart
    - id: PokerCardThreeDiamond
    - id: PokerCardFourClub
    - id: PokerCardFourSpade
    - id: PokerCardFourHeart
    - id: PokerCardFourDiamond
    - id: PokerCardFiveClub
    - id: PokerCardFiveSpade
    - id: PokerCardFiveHeart
    - id: PokerCardFiveDiamond
    - id: PokerCardSixClub
    - id: PokerCardSixSpade
    - id: PokerCardSixHeart
    - id: PokerCardSixDiamond
    - id: PokerCardSevenClub
    - id: PokerCardSevenSpade
    - id: PokerCardSevenHeart
    - id: PokerCardSevenDiamond
    - id: PokerCardEightClub
    - id: PokerCardEightSpade
    - id: PokerCardEightHeart
    - id: PokerCardEightDiamond
    - id: PokerCardNineClub
    - id: PokerCardNineSpade
    - id: PokerCardNineHeart
    - id: PokerCardNineDiamond
    - id: PokerCardTenClub
    - id: PokerCardTenSpade
    - id: PokerCardTenHeart
    - id: PokerCardTenDiamond
    - id: PokerCardJackClub
    - id: PokerCardJackSpade
    - id: PokerCardJackHeart
    - id: PokerCardJackDiamond
    - id: PokerCardQueenClub
    - id: PokerCardQueenSpade
    - id: PokerCardQueenHeart
    - id: PokerCardQueenDiamond
    - id: PokerCardKingClub
    - id: PokerCardKingSpade
    - id: PokerCardKingHeart
    - id: PokerCardKingDiamond
    - id: PokerCardAceClub
    - id: PokerCardAceSpade
    - id: PokerCardAceHeart
    - id: PokerCardAceDiamond

- type: entity
  parent: BasePlayableCard
  id: PokerCardTwoClub
  name: двойка пик
  components:
  - type: Sprite
    layers:
    - state: 2clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardThreeClub
  name: тройка пик
  components:
  - type: Sprite
    layers:
    - state: 3clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFourClub
  name: четверка пик
  components:
  - type: Sprite
    layers:
    - state: 4clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFiveClub
  name: пятерка пик
  components:
  - type: Sprite
    layers:
    - state: 5clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSixClub
  name: шестерка пик
  components:
  - type: Sprite
    layers:
    - state: 6clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSevenClub
  name: семерка пик
  components:
  - type: Sprite
    layers:
    - state: 7clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardEightClub
  name: восьмерка пик
  components:
  - type: Sprite
    layers:
    - state: 8clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardNineClub
  name: девятка пик
  components:
  - type: Sprite
    layers:
    - state: 9clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTenClub
  name: десятка пик
  components:
  - type: Sprite
    layers:
    - state: 10clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardJackClub
  name: валет пик
  components:
  - type: Sprite
    layers:
    - state: jackclubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardQueenClub
  name: королева пик
  components:
  - type: Sprite
    layers:
    - state: queenclubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardKingClub
  name: король пик
  components:
  - type: Sprite
    layers:
    - state: kingclubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardAceClub
  name: туз пик
  components:
  - type: Sprite
    layers:
    - state: 1clubs
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTwoSpade
  name: двойка треф
  components:
  - type: Sprite
    layers:
    - state: 2tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardThreeSpade
  name: третья треф
  components:
  - type: Sprite
    layers:
    - state: 3tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFourSpade
  name: четверка треф
  components:
  - type: Sprite
    layers:
    - state: 4tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFiveSpade
  name: пятерка треф
  components:
  - type: Sprite
    layers:
    - state: 5tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSixSpade
  name: шестерка треф
  components:
  - type: Sprite
    layers:
    - state: 6tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSevenSpade
  name: семерка треф
  components:
  - type: Sprite
    layers:
    - state: 7tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardEightSpade
  name: восьмерка треф
  components:
  - type: Sprite
    layers:
    - state: 8tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardNineSpade
  name: девятка треф
  components:
  - type: Sprite
    layers:
    - state: 9tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTenSpade
  name: десятка треф
  components:
  - type: Sprite
    layers:
    - state: 10tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardJackSpade
  name: валет треф
  components:
  - type: Sprite
    layers:
    - state: jacktref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardQueenSpade
  name: королева треф
  components:
  - type: Sprite
    layers:
    - state: queentref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardKingSpade
  name: король треф
  components:
  - type: Sprite
    layers:
    - state: kingtref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardAceSpade
  name: туз треф
  components:
  - type: Sprite
    layers:
    - state: 1tref
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTwoHeart
  name: двойка черв
  components:
  - type: Sprite
    layers:
    - state: 2heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardThreeHeart
  name: тройка черв
  components:
  - type: Sprite
    layers:
    - state: 3heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFourHeart
  name: четверка черв
  components:
  - type: Sprite
    layers:
    - state: 4heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFiveHeart
  name: пятерка черв
  components:
  - type: Sprite
    layers:
    - state: 5heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSixHeart
  name: шестерка черв
  components:
  - type: Sprite
    layers:
    - state: 6heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSevenHeart
  name: семерка черв
  components:
  - type: Sprite
    layers:
    - state: 7heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardEightHeart
  name: восьмерка черв
  components:
  - type: Sprite
    layers:
    - state: 8heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardNineHeart
  name: девятка черв
  components:
  - type: Sprite
    layers:
    - state: 9heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTenHeart
  name: десятка черв
  components:
  - type: Sprite
    layers:
    - state: 10heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]
 
- type: entity
  parent: BasePlayableCard
  id: PokerCardJackHeart
  name: валет черв
  components:
  - type: Sprite
    layers:
    - state: jackheart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardQueenHeart
  name: королева черв
  components:
  - type: Sprite
    layers:
    - state: queenheart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardKingHeart
  name: король черв
  components:
  - type: Sprite
    layers:
    - state: kingheart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardAceHeart
  name: туз черв
  components:
  - type: Sprite
    layers:
    - state: 1heart
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTwoDiamond
  name: двойка бубны
  components:
  - type: Sprite
    layers:
    - state: 2diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardThreeDiamond
  name: тройка бубны
  components:
  - type: Sprite
    layers:
    - state: 3diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFourDiamond
  name: четверка бубны
  components:
  - type: Sprite
    layers:
    - state: 4diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardFiveDiamond
  name: пятерка бубны
  components:
  - type: Sprite
    layers:
    - state: 5diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSixDiamond
  name: шестерка бубны
  components:
  - type: Sprite
    layers:
    - state: 6diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardSevenDiamond
  name: семерка бубны
  components:
  - type: Sprite
    layers:
    - state: 7diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardEightDiamond
  name: восьмерка бубны
  components:
  - type: Sprite
    layers:
    - state: 8diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardNineDiamond
  name: девятка бубны
  components:
  - type: Sprite
    layers:
    - state: 9diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardTenDiamond
  name: десятка бубны
  components:
  - type: Sprite
    layers:
    - state: 10diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardJackDiamond
  name: валет бубны
  components:
  - type: Sprite
    layers:
    - state: jackdiamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardQueenDiamond
  name: королева бубны
  components:
  - type: Sprite
    layers:
    - state: queendiamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardKingDiamond
  name: король бубны
  components:
  - type: Sprite
    layers:
    - state: kingdiamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: entity
  parent: BasePlayableCard
  id: PokerCardAceDiamond
  name: туз бубны
  components:
  - type: Sprite
    layers:
    - state: 1diamonds
      map: ["enum.PokerCardLayers.NonFlipped"]
    - state: rubashka
      map: ["enum.PokerCardLayers.Flipped"]

- type: Tag
  id: PlayableCard

- type: Tag
  id: Chips

- type: entity
  abstract: true
  parent: BaseItem
  id: ChipsBase
  description: Специальные покерные фишки, очень приятные на ощупь
  components:
  - type: Sprite
    sprite: _WL/Entities/Objects/Economics/chips.rsi
    scale: 0.5,0.5
  - type: Item
    size: Small
    heldPrefix: megaPrefix
  - type: StaticPrice
    price: 5
  - type: Tag
    tags:
    - Chips
  - type: EmitSoundOnLand
    sound:
      path: /Audio/_WL/Economics/chipfall.ogg
      params:
        variation: 0.125
  - type: EmitSoundOnUse
    sound:
      path: /Audio/_WL/Economics/chipsound.ogg
      params:
        variation: 0.125
  - type: UseDelay
    delay: 1

- type: stack
  id: Chips10
  name: Chips10
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips10
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips10
  name: фишка "10"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips10
    count: 15
    baseLayer: base
    layerStates:
    - azurechip
    - azurechip2
    - azurechip3
    - azurechip4
    - azurechip5
    - azurechip6
    - azurechip7
  - type: Sprite
    state: azurechip7
    layers:
    - state: azurechip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips25
  name: Chips25
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips25
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips25
  name: фишка "25"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips25
    count: 15
    baseLayer: base
    layerStates:
    - redchip
    - redchip2
    - redchip3
    - redchip4
    - redchip5
    - redchip6
    - redchip7
  - type: Sprite
    state: redchip7
    layers:
    - state: redchip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips50
  name: Chips50
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips50
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips50
  name: фишка "50"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips50
    count: 15
    baseLayer: base
    layerStates:
    - bluechip
    - bluechip2
    - bluechip3
    - bluechip4
    - bluechip5
    - bluechip6
    - bluechip7
  - type: Sprite
    state: bluechip7
    layers:
    - state: bluechip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips100
  name: Chips100
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips100
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips100
  name: фишка "100"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips100
    count: 15
    baseLayer: base
    layerStates:
    - greenchip
    - greenchip2
    - greenchip3
    - greenchip4
    - greenchip5
    - greenchip6
    - greenchip7
  - type: Sprite
    state: greenchip7
    layers:
    - state: greenchip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips250
  name: Chips250
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips250
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips250
  name: фишка "250"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips250
    count: 15
    baseLayer: base
    layerStates:
    - pinkchip
    - pinkchip2
    - pinkchip3
    - pinkchip4
    - pinkchip5
    - pinkchip6
    - pinkchip7
  - type: Sprite
    state: pinkchip7
    layers:
    - state: pinkchip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips500
  name: Chips500
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips500
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips500
  name: фишка "500"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips500
    count: 15
    baseLayer: base
    layerStates:
    - yellowchip
    - yellowchip2
    - yellowchip3
    - yellowchip4
    - yellowchip5
    - yellowchip6
    - yellowchip7
  - type: Sprite
    state: yellowchip7
    layers:
    - state: yellowchip7
      map: ["base"]
  - type: Appearance

- type: stack
  id: Chips2000
  name: Chips2000
  icon: Objects/Specific/Syndicate/telecrystal.rsi
  spawn: Chips2000
  maxCount: 15
  itemSize: 1

- type: entity
  parent: ChipsBase
  id: Chips2000
  name: фишка "2000"
  suffix: Полные
  components:
  - type: Stack
    stackType: Chips2000
    count: 15
    baseLayer: base
    layerStates:
    - purplechip
    - purplechip2
    - purplechip3
    - purplechip4
    - purplechip5
    - purplechip6
    - purplechip7
  - type: Sprite
    state: purplechip7
    layers:
    - state: purplechip7
      map: ["base"]
  - type: Appearance

- type: entity
  id: BaseChipsCase
  parent: [ BaseStorageItem, BaseBagOpenClose ]
  noSpawn: true
  abstract: true
  name: Кейс с фишками
  description: Большой кейс с разнообразными фишками. Всех по два!
  components:
  - type: Storage
    grid:
    - 0,0,6,3
    maxItemSize: Small
    whitelist:
      tags:
        - Chips
  - type: UserInterface
    interfaces:
      enum.StorageUiKey.Key:
        type: StorageBoundUserInterface
  - type: ContainerContainer
    containers:
      storagebase: !type:Container
        ents: []
  - type: Appearance

- type: entity
  id: ChipsCase
  parent: BaseChipsCase
  components:
  - type: Sprite
    sprite: _WL/Entities/Objects/Economics/chips.rsi
    scale: 1,1
    layers:
    - state: pokercaseclose
    - state: pokercaseopen
      map: ["openLayer"]
      visible: false
  - type: UserInterface
    interfaces:
      enum.StorageUiKey.Key:
        type: StorageBoundUserInterface
  - type: ContainerContainer
    containers:
      storagebase: !type:Container
        ents: []
  - type: Item
    size: Huge
  - type: Appearance

- type: entity
  id: ChipsCaseFilled
  suffix: Полный
  parent: ChipsCase
  components:
  - type: StorageFill
    contents:
    - id: Chips10
    - id: Chips25
    - id: Chips50
    - id: Chips100
    - id: Chips250
    - id: Chips500
    - id: Chips2000
    - id: Chips10
    - id: Chips25
    - id: Chips50
    - id: Chips100
    - id: Chips250
    - id: Chips500
    - id: Chips2000
